[{"question": "Describe in detail", "answer": "The documents provide comprehensive details about GEETA (Generative Enhanced Examination & Text Analysis), an AI-powered document question-answering system utilizing Google Gemini AI.\n\n**Core Functionality:**\n\n*   **AI-Powered Analysis:** GEETA leverages Google Gemini 2.0 Flash for intelligent responses.\n*   **Multi-Format Support:** It can process PDF, DOCX, TXT, and Markdown files.\n*   **Interactive Q&A:** GEETA offers a real-time conversation interface.\n*   **Folder Processing:** It supports batch processing via ZIP uploads of entire folders.\n*   **Web Interface:** GEETA has a Streamlit-based web UI.\n*   **CLI Mode:** It includes a terminal-based interface for advanced users.\n*   **Smart Chunking:** GEETA automatically handles large documents (1M+ characters).\n*   **Secure:** API keys are stored safely in environment variables.\n\n**Interface Options:**\n\n1.  **Web Application (`webgeeta.py`):** \"Modern, user-friendly web interface\".\n2.  **CLI Application (`pygeeta.py`):** \"Command-line interface for terminal users\".\n3.  **Windows Service:** Can be run as a background service on Windows.\n\n**Installation:**\n\n1.  **Prerequisites:** Python 3.7+ and a Google Gemini API key (available [here](https://aistudio.google.com/app/apikey)).\n2.  **Setup:**\n\n    *   Clone the repository: `git clone https://github.com/AyuMans/geeta.git` and `cd geeta`.\n    *   Install dependencies: `pip install -r requirements.txt`.\n    *   Configure API key: Copy `.env.example` to `.env` and add the Gemini API key as `GEMINI_API_KEY=your_actual_api_key_here`.\n\n**Usage:**\n\n*   **Web Application:** Run with `streamlit run webgeeta.py` and open `http://localhost:8501`.\n    *   Features include uploading files (PDF, DOCX, TXT, MD), uploading ZIP folders, asking questions, chat history, and document stats.\n*   **CLI Application:** Run with `python pygeeta.py`.\n    *   Features include loading single/multiple documents, viewing/clearing loaded documents, starting Q&A sessions, uploading folders, viewing files in uploaded folders, and exiting.\n*   **Windows Service:** Run GEETA as a background service.\n    *   Use `install_nssm.bat` (as Administrator) to install.\n    *   Manage with `start_geeta.bat`, `stop_geeta.bat`, and `status_geeta.bat`.\n\n**Supported File Formats:**\n\n| Format          | Extension | Description                       |\n| --------------- | --------- | --------------------------------- |\n| PDF             | `.pdf`    | Extracts text from all pages      |\n| Word Document   | `.docx`   | Processes full document text      |\n| Text File       | `.txt`    | Direct text processing            |\n| Markdown        | `.md`    | Markdown file support             |\n\n**Example Q&A Session (Python):**\n\n```python\nfrom pygeeta import GeminiDocumentQA\n\n# Initialize the system\nqa = GeminiDocumentQA()\n\n# Load documents\nqa.load_document(\"research_paper.pdf\")\nqa.load_folder(\"my_documents/\")\n\n# Ask questions\nanswer = qa.generate_answer(\"What is the main conclusion?\")\nprint(answer)\n```\n\n**Project Structure:**\n\n```\ngeeta/\n\u251c\u2500\u2500 webgeeta.py              # Streamlit web application\n\u251c\u2500\u2500 pygeeta.py               # CLI application\n\u251c\u2500\u2500 geeta_service.py         # Windows service (pywin32)\n\u251c\u2500\u2500 requirements.txt         # Python dependencies\n\u251c\u2500\u2500 .env.example            # Example environment configuration\n\u251c\u2500\u2500 .gitignore              # Git ignore rules\n\u251c\u2500\u2500 install_nssm.bat        # NSSM service installer\n\u251c\u2500\u2500 start_geeta.bat         # Start service\n\u251c\u2500\u2500 stop_geeta.bat          # Stop service\n\u251c\u2500\u2500 status_geeta.bat        # Check service status\n\u2514\u2500\u2500 README.md               # This file\n```\n\n**Configuration:**\n\n*   **Environment Variables:** Create a `.env` file with `GEMINI_API_KEY=your_actual_api_key_here`.\n*   **Web Application Port:** Customize via `streamlit run webgeeta.py --server.port=8080`.\n*   **Model Selection:** Modify `self.model = genai.GenerativeModel('models/gemini-2.0-flash')` in `pygeeta.py` or `webgeeta.py`.\n\n**How It Works:**\n\n1.  **Document Loading:** Extracts text from various file formats.\n2.  **Context Processing:** Combines documents into a unified context.\n3.  **AI Analysis:** Sends questions with full document context to Gemini AI.\n4.  **Smart Response:** Returns answers based solely on document content.\n5.  **Large Document Handling:** Automatically chunks large documents (>1M characters).\n\n**Security Notes:**\n\n*   Never commit `.env` to version control.\n*   Keep your API key private.\n*   `.env` is automatically excluded via `.gitignore`.\n\n**API Usage:**\n\n*   Free tier has usage limits.\n*   Monitor usage at [Google AI Studio](https://aistudio.google.com).\n\n**Performance:**\n\n*   Small Documents (<100K chars): Instant responses.\n*   Medium Documents (100K-500K chars): 2-5 seconds.\n*   Large Documents (500K-1M chars): 5-15 seconds.\n*   Very Large Documents (>1M chars): Automatic chunking with progress indicators.\n\n**Troubleshooting:**\n\n*   **\"API key not found\":** Ensure `.env` exists and contains `GEMINI_API_KEY=your_actual_key_here`.\n*   **\"Unsupported file format\":** Verify file extension.\n*   **\"Document processing is slow\":** Large documents take longer.\n*   **Windows Service Issues:** Run installation as Administrator; check `service_error.log`.\n\n**Performance Benchmarks:**\n\n| Document Size | Processing Time | Response Time |\n| ------------- | --------------- | ------------- |\n| 10K chars     | <1 second       | 1-2 seconds   |\n| 100K chars    | 1-2 seconds     | 2-4 seconds   |\n| 500K chars    | 2-5 seconds     | 5-10 seconds  |\n| 1M+ chars     | 5-15 seconds    | 10-20 seconds |\n\n**License:**\n\n*   MIT License.\n\n**Roadmap:**\n\n*   Support for more document formats (PPT, Excel, etc.)\n*   Multi-language support\n*   Cloud deployment guides (AWS, Azure, GCP)\n*   Docker containerization\n*   API endpoint for integrations\n*   Advanced search and filtering\n*   Document comparison features\n*   Export answers to various formats\n", "files": 1}]