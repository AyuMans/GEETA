[
  {
    "question": "Explain in detail",
    "answer": "GEETA (Generative Enhanced Examination & Text Analysis) is an AI-powered document question-answering system that leverages Google Gemini AI to intelligently analyze and answer questions about documents. It is designed to process various file formats, offering both a web interface and a command-line interface.\n\n**Key Features:**\n\n*   **Multi-Format Support:** GEETA can process PDF, DOCX, TXT, and Markdown files.\n*   **AI-Powered Analysis:** It utilizes Google Gemini 2.0 Flash for intelligent responses.\n*   **Interactive Q&A:** It provides a real-time conversation interface for interacting with documents.\n*   **Folder Processing:** It supports uploading entire folders (via ZIP) for batch processing.\n*   **Web Interface:** It has a Streamlit-based web UI.\n*   **CLI Mode:** It offers a terminal-based interface.\n*   **Smart Chunking:** It automatically handles large documents (1M+ characters).\n*   **Secure:** API keys are stored safely in environment variables.\n\n**Interface Options:**\n\n1.  **Web Application (`webgeeta.py`):** A user-friendly web interface.\n2.  **CLI Application (`pygeeta.py`):** A command-line interface.\n3.  **Windows Service:** Can be run as a background service on Windows.\n\n**Installation:**\n\n*   **Prerequisites:** Python 3.7 or higher and a Google Gemini API key.\n*   **Steps:**\n    1.  Clone the repository:\n        ```bash\n        git clone https://github.com/AyuMans/geeta.git\n        cd geeta\n        ```\n    2.  Install dependencies:\n        ```bash\n        pip install -r requirements.txt\n        ```\n    3.  Configure the API Key:\n        ```bash\n        cp .env.example .env\n        ```\n        Edit the `.env` file and add the Gemini API key:\n        ```\n        GEMINI_API_KEY=your_actual_api_key_here\n        ```\n\n**Usage:**\n\n*   **Web Application:**\n    *   Run the web application:\n        ```bash\n        streamlit run webgeeta.py\n        ```\n    *   Open the browser to `http://localhost:8501`.\n    *   Web interface features include uploading files (PDF, DOCX, TXT, or MD), uploading folders (ZIP), asking questions, viewing chat history, and tracking document statistics.\n*   **CLI Application:**\n    *   Run the CLI application:\n        ```bash\n        python pygeeta.py\n        ```\n    *   CLI features include loading single or multiple documents, viewing loaded documents, clearing all documents, starting a Q&A session, uploading a folder, viewing files in the uploaded folder, and exiting.\n*   **Windows Service:**\n    *   Run GEETA as a background service using NSSM:\n        ```batch\n        # Run as Administrator\n        install_nssm.bat\n        ```\n    *   Service Management:\n        *   Start: `start_geeta.bat`\n        *   Stop: `stop_geeta.bat`\n        *   Status: `status_geeta.bat`\n\n**Documentation:**\n\n*   **Supported File Formats:**\n    *   PDF (`.pdf`): Extracts text from all pages.\n    *   Word Document (`.docx`): Processes full document text.\n    *   Text File (`.txt`): Direct text processing.\n    *   Markdown (`.md`): Markdown file support.\n*   **Example Q&A Session (Python):**\n    ```python\n    from pygeeta import GeminiDocumentQA\n\n    # Initialize the system\n    qa = GeminiDocumentQA()\n\n    # Load documents\n    qa.load_document(\"research_paper.pdf\")\n    qa.load_folder(\"my_documents/\")\n\n    # Ask questions\n    answer = qa.generate_answer(\"What is the main conclusion?\")\n    print(answer)\n    ```\n\n**Project Structure:**\n\n```\ngeeta/\n├── webgeeta.py              # Streamlit web application\n├── pygeeta.py               # CLI application\n├── geeta_service.py         # Windows service (pywin32)\n├── requirements.txt         # Python dependencies\n├── .env.example            # Example environment configuration\n├── .gitignore              # Git ignore rules\n├── install_nssm.bat        # NSSM service installer\n├── start_geeta.bat         # Start service\n├── stop_geeta.bat          # Stop service\n├── status_geeta.bat        # Check service status\n└── README.md               # This file\n```\n\n**Configuration:**\n\n*   **Environment Variables:** Create a `.env` file in the project root:\n    ```env\n    GEMINI_API_KEY=your_actual_api_key_here\n    ```\n*   **Customization Options:**\n    *   **Web Application Port:** `streamlit run webgeeta.py --server.port=8080`\n    *   **Model Selection:** Edit in `pygeeta.py` or `webgeeta.py`:\n        ```python\n        self.model = genai.GenerativeModel('models/gemini-2.0-flash')\n        ```\n\n**How It Works:**\n\n1.  **Document Loading:** Extracts text from various file formats.\n2.  **Context Processing:** Combines all documents into a unified context.\n3.  **AI Analysis:** Sends questions with full document context to Gemini AI.\n4.  **Smart Response:** Returns comprehensive answers based solely on document content.\n5.  **Large Document Handling:** Automatically chunks documents exceeding 1M characters.\n\n**Security Notes:**\n\n*   Never commit `.env` file to version control.\n*   Keep the API key private.\n*   `.env` is automatically excluded via `.gitignore`.\n*   Use `.env.example` as a template.\n\n**Performance Benchmarks:**\n\n| Document Size | Processing Time | Response Time |\n| ------------- | --------------- | ------------- |\n| 10K chars     | <1 second       | 1-2 seconds   |\n| 100K chars    | 1-2 seconds     | 2-4 seconds   |\n| 500K chars    | 2-5 seconds     | 5-10 seconds  |\n| 1M+ chars     | 5-15 seconds    | 10-20 seconds |\n\n*Tested with Google Gemini 2.0 Flash on a standard network connection.*\n\n**Contributing:**\n\nContributions are welcome. The process involves forking the repository, creating a feature branch, committing changes, pushing to the branch, and opening a Pull Request. Areas for contribution include additional file format support, UI/UX improvements, performance optimizations, documentation enhancements, and bug fixes.\n\n**License:**\n\nThe project is licensed under the MIT License.\n",
    "files": 1
  },
  {
    "question": "what is global warming",
    "answer": "Based on the provided documents:\n\nGlobal warming is defined as the human-enhanced warming of the atmosphere, which is due to human activities such as burning fossil fuels, clearing forests, and growing crops releasing carbon dioxide, methane, and nitrogen oxide into the atmosphere in increasing amounts. The CO 2 produced by human activities is the largest contributor to global warming. Methane is a more powerful greenhouse gas than CO 2, but has a shorter lifetime.\n\n",
    "files": 22
  }
]